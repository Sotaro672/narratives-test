rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 認証済みユーザーのみ操作可能（基本ルール）
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // ビジネスユーザーかどうかを判定する関数
    function isBusinessUser() {
      return exists(/databases/$(database)/documents/business_users/$(request.auth.uid));
    }
    
    // 管理者権限チェックの関数
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'root'];
    }
    
    // ビジネスユーザーコレクション（CRM用）
    match /business_users/{businessUserId} {
      allow read, write: if request.auth != null && request.auth.uid == businessUserId;
      allow create: if request.auth != null && request.auth.uid == businessUserId;
    }
    
    // ユーザーコレクションの特別なルール
    match /users/{userId} {
      // すべての認証済みユーザーに読み取り権限を付与
      // ビジネスユーザーも含めて全ての users データを読み取り可能
      allow read: if request.auth != null;
      
      // 作成・更新はユーザー自身または管理者のみ可能
      allow create, update: if request.auth != null && (
        request.auth.uid == userId || isAdmin()
      );
      
      // 削除は管理者のみ可能
      allow delete: if request.auth != null && isAdmin();
    }
    
    // アバター情報（SNS用）
    match /avatars/{avatarId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.user_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
    }
    
    // ウォレット情報（SNS用）- ビジネスユーザーも読み取り可能に変更
    match /wallets/{walletId} {
      // ビジネスユーザーは全てのwalletデータを読み取り可能
      // 一般ユーザーは自分のデータのみ読み取り・書き込み可能
      allow read: if request.auth != null && (
        isBusinessUser() || request.auth.uid == resource.data.user_id
      );
      allow write: if request.auth != null && request.auth.uid == resource.data.user_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
    }
    
    // 配送先住所（SNS用）
    match /shipping_addresses/{addressId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.user_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
    }
  }
}
